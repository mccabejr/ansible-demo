# code: language=ansible
---
- hosts: windows_host
  vars:
    ansible_connection: winrm
    ansible_ssh_port: 5986
    ansible_winrm_server_cert_validation: ignore
    ansible_winrm_transport: ntlm
  gather_facts: no
  become_method: runas

  tasks:
    - name: Import Variables
      ansible.builtin.include_vars:
        file: "{{ item }}"
      with_items:
        - vars/main.yml

    - name: Windows Server File System Pre-requisites
      block:
        - name: CD-ROM Drive Letter Assignment
          ansible.windows.win_powershell: #TODO - Confirm Internally with my Code
            script: |
              $optical = Get-CimInstance win32_volume | Where-Object DriveType -eq 5
              If ($optical) {
                If ( 'Z:' -ne $optical.DriveLetter) {
                  $optical.DriveLetter = 'Z:'
                  Set-CimInstance $optical
                }
              }

        - name: Gather Disk Facts
          community.windows.win_disk_facts:
            filter:
              - physical_disk

        - name: Gather all RAW disks
          ansible.builtin.set_fact:
            raw_disks: "{{ ansible_disks | json_query(jmes_query) }}"
          vars:
            jmes_query: "[?partition_style=='RAW']"

        - name: Ensure RAW disks are Initialized
          community.windows.win_initialize_disk:
            disk_number: "{{ item.number }}"
          loop: "{{ raw_disks }}"

        - name: Partition #TODO - This should be Dynamic and Automated based on win_disk_facts
          community.windows.win_partition:
            drive_letter: "{{ item.drive_letter }}"
            partition_size: -1
            disk_number: "{{ item.disk_number }}"
          with_items: "{{ partitions }}"

        - name: Format Setup #TODO - This should be Dynamic and Automated based on win_disk_facts
          community.windows.win_format:
            drive_letter: "{{ item.drive_letter }}"
            file_system: "{{ item.file_system }}"
            new_label: "{{ item.new_label }}"
          with_items: "{{ drives }}"

        - name: File Folder Setup
          ansible.windows.win_file:
            path: "{{ item }}"
            state: directory
          with_items: "{{ folders }}"

    - name: Windows Server Feature
      ansible.windows.win_feature:
        name: AD-Domain-Services
        state: present

    - name: Microsoft Active Directory
      block:
        - name: Microsoft Active Directory Domain Controller Promotion
          microsoft.ad.domain_controller:
            database_path: "{{ dc_database_path }}"
            dns_domain_name: "{{ dc_dns_domain_name }}"
            domain_admin_user: "{{ lookup('env','MICROSOFT_AD_DOMAIN_ADMIN_SVC_ACCT_USERNAME') }}" # Project Credential or pulled from SecretServer
            domain_admin_password: "{{ lookup('env','MICROSOFT_AD_DOMAIN_ADMIN_SVC_ACCT_PASSWORD') }}" # Project Credential or pulled from SecretServer
            domain_log_path: "{{ dc_domain_log_path }}"
            safe_mode_password: "{{ lookup('env','MICROSOFT_AD_DOMAIN_DSRM_PASSWORD') }}" # Probably programmatically pulled from SecretServer
            sysvol_path: "{{ dc_sysvol_path }}"
            state: domain_controller
            install_dns: true
            reboot: true